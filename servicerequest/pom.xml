<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.apimsa.labs</groupId>
	<artifactId>servicerequest</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>servicerequest</name>
	<description>servicerequest</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.2.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<junit-jupiter.version>5.3.2</junit-jupiter.version>
		<start-class>com.apimsa.labs.servicerequest.ServiceRequestApplication</start-class> 
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		
		<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-data-mongodb</artifactId>
			</dependency>

		<!-- Dont add jpa when Spring Data Mongodb is included
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		
		 -->

		<dependency> 
            <groupId>org.springframework.boot</groupId> 
            <artifactId>spring-boot-starter-web</artifactId> 
        </dependency> 
        
        <!--  Dev Tools and HAL Browser  -->	
        	
	     <dependency>
	            <groupId>org.springframework.boot</groupId>
	            <artifactId>spring-boot-devtools</artifactId>
	            <optional>true</optional>
	    </dependency>
        
        <dependency>
			 <groupId>org.springframework.data</groupId>
			 <artifactId>spring-data-rest-hal-browser</artifactId>
		 </dependency>
		 
		 <!-- End : Dev Tools and HAL Browser  -->
        
        <!-- Keep test dependency last -->
        <dependency>
			    <groupId>org.springframework.boot</groupId>
			    <artifactId>spring-boot-starter-test</artifactId>
			    <scope>test</scope>
			</dependency>       
			
			<!-- junit 5 
	        <dependency>
	            <groupId>org.junit.jupiter</groupId>
	            <artifactId>junit-jupiter-engine</artifactId>
	            <version>${junit-jupiter.version}</version>
	            <scope>test</scope>
	        </dependency>
	        -->
	        
        <!-- End: Keep test dependency last -->
	       	  
	    <!-- For swagger 2.0 generation  on url /v2/api-docs-->   	
	    
		    <dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger2</artifactId>
				<version>2.4.0</version>
			</dependency>
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger-ui</artifactId>
				<version>2.4.0</version>
			</dependency>  
				       	  
	    <!-- End: For swagger 2.0 generation  -->
	    
	    <!--  add git details . gives build info in actuator endpoint http://localhost:8080/actuator/info -->
	    <dependency>
		    <groupId>pl.project13.maven</groupId>
		    <artifactId>git-commit-id-plugin</artifactId>
		    <version>2.2.6</version>
		</dependency>  
		
		<!-- use spring security to secure actuator endpoints -->
		<!--
		<dependency>
		   <groupId>org.springframework.boot</groupId>
		   <artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		-->
		
		<!-- Micrometer Prometheus registry  used by sprint to send actuator metrics to prometheus . check http://localhost:8080/actuator/prometheus -->
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>
	    
	    <!-- for distributed tracing -->   
	    <dependency>
		    <groupId>io.opentracing.contrib</groupId>
		    <artifactId>opentracing-spring-web-autoconfigure</artifactId>
		    <version>0.3.2</version>
		</dependency>
	    
	    <!--  jaeger for tracer bean -->
	    <dependency>
		  <groupId>io.jaegertracing</groupId>
		  <artifactId>jaeger-client</artifactId>
		  <version>0.34.0</version>
		</dependency>	        
	       	        
	</dependencies>

	<!-- Jib allows not only to generate the Docker image, but also to push it in a remote registry, and send it to the Docker daemon. The plugin provides two goals for that, build to push and dockerBuild to send to the daemon. Because usage can be cumbersome e.g. mvn package com.google.cloud.tools:jib-maven-plugin:dockerBuild, create Maven profiles -->
	<profiles>
	  <profile>
      <id>daemon</id>
		<build>
			<plugins>
				<plugin>
					<groupId>com.google.cloud.tools</groupId>
					<artifactId>jib-maven-plugin</artifactId>
					<version>1.5.1</version>
					<executions>
						<execution>
							<id>docker-daemon</id>
							<phase>package</phase>
							<goals>
								<goal>dockerBuild</goal>
							</goals>
						</execution>
					</executions>
					<!-- <configuration>
				      <to>
				         <image>apimsa/spring-jib:${project.version}</image>
				      </to>
				   </configuration>
				    -->
				</plugin>
			</plugins>
		</build>
      </profile>
    </profiles>

	<build>
		<plugins>
			<plugin> 
		      <groupId>org.springframework.boot</groupId> 
		      <artifactId>spring-boot-maven-plugin</artifactId> 
		      <executions> 
		        <execution> 
		          <goals> 
		          <goal>build-info</goal> 
		          </goals> 
		        </execution> 
		      </executions> 
		      <configuration> 
		        <mainClass>${start-class}</mainClass> 
		      </configuration> 
	    	</plugin>
	    	<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.0</version>
            </plugin>
			<plugin> 
	          <groupId>org.apache.maven.plugins</groupId> 
	          <artifactId>maven-compiler-plugin</artifactId> 
	        <version>3.5.1</version> 
	        <configuration> 
	          <source>1.8</source> 
	          <target>1.8</target> 
	        </configuration> 
	       </plugin>
			<!--  <plugin>	
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<configuration>
					<excludeProperties>git.build.user.*,git.commit.user.*,git.remote.*,git.closest.*</excludeProperties>
				</configuration>
			</plugin> -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>			
				<artifactId>maven-scm-plugin</artifactId>			
				<version>1.9.5</version>
				<configuration>
				<tag>v${project.version}</tag>
				</configuration>
				</plugin>
		</plugins>
	</build>

</project>
